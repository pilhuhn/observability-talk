quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=demo
quarkus.datasource.password=lala7

quarkus.datasource.jdbc.url=jdbc:postgresql://${pg.host:localhost:5432}/replicator
quarkus.datasource.jdbc.max-size=16
# quarkus.datasource.jdbc.telemetry=true

# quarkus.application.name=replicator
# quarkus.otel.exporter.otlp.endpoint=http://${otel.host:localhost}:4317

quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n


# The remote payment service we consult
quarkus.rest-client."de.bsd.replicator.PaymentService".url=http://${payment.hostport:localhost:8080}


###
# Kafka related
#kafka.bootstrap.servers=${kafka.host:localhost}:9092
#mp.messaging.outgoing.topic1.connector=smallrye-kafka
#mp.messaging.outgoing.topic1.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.outgoing.topic1.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#
#mp.messaging.incoming.topic2.connector=smallrye-kafka
#mp.messaging.incoming.topic2.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.topic2.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
