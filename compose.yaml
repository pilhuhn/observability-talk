services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
    environment:
      COLLECTOR_OTLP_ENABLED: true
    network:
      - replicator_net
  
  postgres:
    image: quay.io/pilhuhn/replicator-psql
    ports: 
      - 5432:5432
    environment:
      - POSTGRESQL_ADMIN_PASSWORD=lala
      - POSTGRESQL_USER=user
      - POSTGRESQL_PASSWORD=pass
      - POSTGRESQL_DATABASE=db=replicator
    volumes:
      - db-data:/var/lib/pgsql/data
    network:
      - replicator_net
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 15s
      timeout: 7s
      retries: 5

  kafka:
    image: docker.io/apache/kafka-native:3.8.1
    ports: 9092:9092
    network:
      - replicator_net
    hostname: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://kafka:9092,PLAINTEXT://localhost:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

  replicator:
    image: quay.io/pilhuhn/quarkus-replicator
    profiles: ['dont_auto_start']
    ports: 
      - 8080:8080
    network:
      - replicator_net
    environment:
      - pg.host=postgres
      - otel.host=jaeger
      - payment.hostport=python-pay:8787
      - kafka.host=kafka

  kafka-relay:
    image: quay.io/pilhuhn/kafka-relay
    profiles: ['dont_auto_start']
    network:
      - replicator_net
    environment:
      - kafka_host=kafka
      - otel_host=jaeger 
   

  python-pay:
    image: quay.io/pilhuhn/python-pay
    profiles: ['dont_auto_start']
    ports:
      - 8787:8787
    network:
      - replicator_net
    environment:
      - pg_host=postgres
      - otel_host=jaeger 
      - other_hostport=python-other:8000


  python-other:
    image: quay.io/pilhuhn/py-simple-http
    ports:
      - 8000:8000
    network:
      - replicator_net
   

volumes:
  db-data:
  
  
